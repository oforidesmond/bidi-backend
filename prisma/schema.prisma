generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  password    String
  role        Role      @relation(fields: [roleId], references: [id])
  roleId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  omc         Omc?      @relation(fields: [omcId], references: [id])
  omcId       Int?
  station     Station?  @relation(fields: [stationId], references: [id])
  stationId   Int?
  transactions Transaction[]
}

model Role {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  users       User[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Omc {
  id             Int       @id @default(autoincrement())
  name           String
  location       String?
  logo           String?   // Stores file path or URL for JPG, JPEG, PNG
  contactPerson  String?
  contact        String?
  email          String?
  products       Json?      // Stores array of { name: string, price: float }
  stations       Station[]
  users          User[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?
}

model Station {
  id            Int          @id @default(autoincrement())
  name          String
  code          String       @unique
  location      String
  managerName   String?
  managerContact String?
  omc           Omc          @relation(fields: [omcId], references: [id])
  omcId         Int
  products      Product[]
  users         User[]
  transactions  Transaction[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  deletedAt     DateTime?
}

model Product {
  id          Int       @id @default(autoincrement())
  type        String    // e.g., "Gasoline", "Diesel"
  liters      Float
  amount      Float
  station     Station   @relation(fields: [stationId], references: [id])
  stationId   Int
  transactions Transaction[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Driver {
  id             Int       @id @default(autoincrement())
  ghanaCard     String    @unique
  mobileNumber  String
  vehicleCount  Int
  region        String?
  district      String?
  companyName   String?
  transactions  Transaction[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
}

model Transaction {
  id             Int       @id @default(autoincrement())
  mobileNumber   String
  product        Product   @relation(fields: [productId], references: [id])
  productId      Int
  liters         Float
  amount         Float
  pumpAttendant  User      @relation(fields: [pumpAttendantId], references: [id])
  pumpAttendantId Int
  station        Station   @relation(fields: [stationId], references: [id])
  stationId      Int
  driver         Driver?   @relation(fields: [driverId], references: [id])
  driverId       Int?
  token          String?   @unique
  createdAt      DateTime  @default(now())
  deletedAt      DateTime?
}